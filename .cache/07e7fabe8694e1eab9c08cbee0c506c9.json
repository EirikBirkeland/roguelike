{"id":"index.js","dependencies":[{"name":"/home/eb/code/roguelike/package.json","includedInParent":true,"mtime":1538314550595},{"name":"/home/eb/code/roguelike/.babelrc","includedInParent":true,"mtime":1538266477416},{"name":"./lib/Game","loc":{"line":8,"column":17},"parent":"/home/eb/code/roguelike/index.js","resolved":"/home/eb/code/roguelike/lib/Game.ts"},{"name":"./lib/Room","loc":{"line":5,"column":17},"parent":"/home/eb/code/roguelike/index.js","resolved":"/home/eb/code/roguelike/lib/Room.ts"},{"name":"./lib/LevelGenerator","loc":{"line":6,"column":27},"parent":"/home/eb/code/roguelike/index.js","resolved":"/home/eb/code/roguelike/lib/LevelGenerator.js"},{"name":"./lib/animate/beings","loc":{"line":7,"column":30},"parent":"/home/eb/code/roguelike/index.js","resolved":"/home/eb/code/roguelike/lib/animate/beings.ts"},{"name":"process","parent":"/home/eb/code/roguelike/index.js","resolved":"/home/eb/.config/yarn/global/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n'use strict';\n\nvar _Game = require('./lib/Game');\n\nvar _Game2 = _interopRequireDefault(_Game);\n\nvar _Room = require('./lib/Room');\n\nvar _Room2 = _interopRequireDefault(_Room);\n\nvar _LevelGenerator = require('./lib/LevelGenerator');\n\nvar _LevelGenerator2 = _interopRequireDefault(_LevelGenerator);\n\nvar _beings = require('./lib/animate/beings');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nprocess.stdin.resume(); // 1. 2D grid to move on as @\n// 2. Add some walls\n// 3. Support DOM and terminal\n\nprocess.stdin.setEncoding('utf8');\n\nprocess.stdin.on('data', function (chunk) {\n    process.stdout.write('data: ' + chunk);\n});\n\nmodule.exports = { myGrid: _Game2.default, Corridor: Corridor, LevelGenerator: _LevelGenerator2.default, Game: _Game2.default, Enemy: _beings.Enemy, Player: _beings.Player, Room: _Room2.default };","map":{"mappings":[{"generated":{"line":4,"column":0},"source":"index.js","original":{"line":4,"column":0}},{"generated":{"line":8,"column":0},"source":"index.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"index.js","original":{"line":6,"column":0}},{"generated":{"line":16,"column":0},"source":"index.js","original":{"line":7,"column":0}},{"name":"process","generated":{"line":20,"column":0},"source":"index.js","original":{"line":10,"column":0}},{"name":"stdin","generated":{"line":20,"column":8},"source":"index.js","original":{"line":10,"column":8}},{"generated":{"line":20,"column":13},"source":"index.js","original":{"line":10,"column":0}},{"name":"resume","generated":{"line":20,"column":14},"source":"index.js","original":{"line":10,"column":14}},{"generated":{"line":20,"column":20},"source":"index.js","original":{"line":10,"column":0}},{"generated":{"line":20,"column":24},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":21,"column":0},"source":"index.js","original":{"line":2,"column":0}},{"generated":{"line":22,"column":0},"source":"index.js","original":{"line":3,"column":0}},{"name":"process","generated":{"line":24,"column":0},"source":"index.js","original":{"line":11,"column":0}},{"name":"stdin","generated":{"line":24,"column":8},"source":"index.js","original":{"line":11,"column":8}},{"generated":{"line":24,"column":13},"source":"index.js","original":{"line":11,"column":0}},{"name":"setEncoding","generated":{"line":24,"column":14},"source":"index.js","original":{"line":11,"column":14}},{"generated":{"line":24,"column":25},"source":"index.js","original":{"line":11,"column":0}},{"generated":{"line":24,"column":26},"source":"index.js","original":{"line":11,"column":26}},{"generated":{"line":24,"column":32},"source":"index.js","original":{"line":11,"column":0}},{"name":"process","generated":{"line":26,"column":0},"source":"index.js","original":{"line":13,"column":0}},{"name":"stdin","generated":{"line":26,"column":8},"source":"index.js","original":{"line":13,"column":8}},{"generated":{"line":26,"column":13},"source":"index.js","original":{"line":13,"column":0}},{"name":"on","generated":{"line":26,"column":14},"source":"index.js","original":{"line":13,"column":14}},{"generated":{"line":26,"column":16},"source":"index.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":17},"source":"index.js","original":{"line":13,"column":17}},{"generated":{"line":26,"column":23},"source":"index.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":25},"source":"index.js","original":{"line":13,"column":25}},{"name":"chunk","generated":{"line":26,"column":35},"source":"index.js","original":{"line":13,"column":35}},{"generated":{"line":26,"column":40},"source":"index.js","original":{"line":13,"column":25}},{"generated":{"line":26,"column":42},"source":"index.js","original":{"line":13,"column":42}},{"name":"process","generated":{"line":27,"column":0},"source":"index.js","original":{"line":14,"column":4}},{"name":"stdout","generated":{"line":27,"column":12},"source":"index.js","original":{"line":14,"column":12}},{"generated":{"line":27,"column":18},"source":"index.js","original":{"line":14,"column":4}},{"name":"write","generated":{"line":27,"column":19},"source":"index.js","original":{"line":14,"column":19}},{"generated":{"line":27,"column":24},"source":"index.js","original":{"line":14,"column":4}},{"generated":{"line":27,"column":25},"source":"index.js","original":{"line":14,"column":25}},{"name":"chunk","generated":{"line":27,"column":36},"source":"index.js","original":{"line":14,"column":36}},{"generated":{"line":27,"column":41},"source":"index.js","original":{"line":14,"column":4}},{"generated":{"line":28,"column":0},"source":"index.js","original":{"line":15,"column":1}},{"generated":{"line":28,"column":1},"source":"index.js","original":{"line":13,"column":0}},{"name":"module","generated":{"line":30,"column":0},"source":"index.js","original":{"line":17,"column":0}},{"name":"exports","generated":{"line":30,"column":7},"source":"index.js","original":{"line":17,"column":7}},{"generated":{"line":30,"column":14},"source":"index.js","original":{"line":17,"column":0}},{"generated":{"line":30,"column":17},"source":"index.js","original":{"line":17,"column":17}},{"name":"myGrid","generated":{"line":30,"column":19},"source":"index.js","original":{"line":17,"column":19}},{"generated":{"line":30,"column":41},"source":"index.js","original":{"line":17,"column":17}},{"name":"Corridor","generated":{"line":30,"column":43},"source":"index.js","original":{"line":17,"column":27}},{"generated":{"line":30,"column":61},"source":"index.js","original":{"line":17,"column":17}},{"name":"LevelGenerator","generated":{"line":30,"column":63},"source":"index.js","original":{"line":17,"column":37}},{"generated":{"line":30,"column":103},"source":"index.js","original":{"line":17,"column":17}},{"name":"Game","generated":{"line":30,"column":105},"source":"index.js","original":{"line":17,"column":53}},{"generated":{"line":30,"column":125},"source":"index.js","original":{"line":17,"column":17}},{"name":"Enemy","generated":{"line":30,"column":127},"source":"index.js","original":{"line":17,"column":59}},{"generated":{"line":30,"column":147},"source":"index.js","original":{"line":17,"column":17}},{"name":"Player","generated":{"line":30,"column":149},"source":"index.js","original":{"line":17,"column":66}},{"generated":{"line":30,"column":171},"source":"index.js","original":{"line":17,"column":17}},{"name":"Room","generated":{"line":30,"column":173},"source":"index.js","original":{"line":17,"column":74}},{"generated":{"line":30,"column":193},"source":"index.js","original":{"line":17,"column":17}},{"generated":{"line":30,"column":195},"source":"index.js","original":{"line":17,"column":0}}],"sources":{"index.js":"// 1. 2D grid to move on as @\n// 2. Add some walls\n// 3. Support DOM and terminal\nimport myGrid from './lib/Game';\nimport Room from './lib/Room';\nimport LevelGenerator from './lib/LevelGenerator';\nimport { Player, Enemy } from './lib/animate/beings';\nimport Game from './lib/Game';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nprocess.stdin.on('data', function (chunk) {\n    process.stdout.write('data: ' + chunk);\n});\n\nmodule.exports = { myGrid, Corridor, LevelGenerator, Game, Enemy, Player, Room };"},"lineCount":null}},"hash":"598d9adb4071e58eade73f44b86a66f6","cacheData":{"env":{}}}